//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SampleRecordingApp.AdminServices {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AdminServicesServiceSoap", Namespace="http://tempuri.org/")]
    public partial class AdminServicesService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getDevicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback newConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback getConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback setConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback startLoggerOperationCompleted;
        
        private System.Threading.SendOrPostCallback stopLoggerOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AdminServicesService() {
            this.Url = global::SampleRecordingApp.Properties.Settings.Default.SampleRecordingApp_AdminServices_AdminServicesService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getDevicesCompletedEventHandler getDevicesCompleted;
        
        /// <remarks/>
        public event getLinesCompletedEventHandler getLinesCompleted;
        
        /// <remarks/>
        public event newConfigCompletedEventHandler newConfigCompleted;
        
        /// <remarks/>
        public event getConfigCompletedEventHandler getConfigCompleted;
        
        /// <remarks/>
        public event setConfigCompletedEventHandler setConfigCompleted;
        
        /// <remarks/>
        public event startLoggerCompletedEventHandler startLoggerCompleted;
        
        /// <remarks/>
        public event stopLoggerCompletedEventHandler stopLoggerCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDevices", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getDevices() {
            object[] results = this.Invoke("getDevices", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getDevicesAsync() {
            this.getDevicesAsync(null);
        }
        
        /// <remarks/>
        public void getDevicesAsync(object userState) {
            if ((this.getDevicesOperationCompleted == null)) {
                this.getDevicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDevicesOperationCompleted);
            }
            this.InvokeAsync("getDevices", new object[0], this.getDevicesOperationCompleted, userState);
        }
        
        private void OngetDevicesOperationCompleted(object arg) {
            if ((this.getDevicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDevicesCompleted(this, new getDevicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLines", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getLines(string deviceName) {
            object[] results = this.Invoke("getLines", new object[] {
                        deviceName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getLinesAsync(string deviceName) {
            this.getLinesAsync(deviceName, null);
        }
        
        /// <remarks/>
        public void getLinesAsync(string deviceName, object userState) {
            if ((this.getLinesOperationCompleted == null)) {
                this.getLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLinesOperationCompleted);
            }
            this.InvokeAsync("getLines", new object[] {
                        deviceName}, this.getLinesOperationCompleted, userState);
        }
        
        private void OngetLinesOperationCompleted(object arg) {
            if ((this.getLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLinesCompleted(this, new getLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool newConfig(KLogger k) {
            object[] results = this.Invoke("newConfig", new object[] {
                        k});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void newConfigAsync(KLogger k) {
            this.newConfigAsync(k, null);
        }
        
        /// <remarks/>
        public void newConfigAsync(KLogger k, object userState) {
            if ((this.newConfigOperationCompleted == null)) {
                this.newConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewConfigOperationCompleted);
            }
            this.InvokeAsync("newConfig", new object[] {
                        k}, this.newConfigOperationCompleted, userState);
        }
        
        private void OnnewConfigOperationCompleted(object arg) {
            if ((this.newConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newConfigCompleted(this, new newConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public KLogger[] getConfig() {
            object[] results = this.Invoke("getConfig", new object[0]);
            return ((KLogger[])(results[0]));
        }
        
        /// <remarks/>
        public void getConfigAsync() {
            this.getConfigAsync(null);
        }
        
        /// <remarks/>
        public void getConfigAsync(object userState) {
            if ((this.getConfigOperationCompleted == null)) {
                this.getConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetConfigOperationCompleted);
            }
            this.InvokeAsync("getConfig", new object[0], this.getConfigOperationCompleted, userState);
        }
        
        private void OngetConfigOperationCompleted(object arg) {
            if ((this.getConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getConfigCompleted(this, new getConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setConfig(KLogger k) {
            object[] results = this.Invoke("setConfig", new object[] {
                        k});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setConfigAsync(KLogger k) {
            this.setConfigAsync(k, null);
        }
        
        /// <remarks/>
        public void setConfigAsync(KLogger k, object userState) {
            if ((this.setConfigOperationCompleted == null)) {
                this.setConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetConfigOperationCompleted);
            }
            this.InvokeAsync("setConfig", new object[] {
                        k}, this.setConfigOperationCompleted, userState);
        }
        
        private void OnsetConfigOperationCompleted(object arg) {
            if ((this.setConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setConfigCompleted(this, new setConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/startLogger", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool startLogger(int stationID) {
            object[] results = this.Invoke("startLogger", new object[] {
                        stationID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void startLoggerAsync(int stationID) {
            this.startLoggerAsync(stationID, null);
        }
        
        /// <remarks/>
        public void startLoggerAsync(int stationID, object userState) {
            if ((this.startLoggerOperationCompleted == null)) {
                this.startLoggerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstartLoggerOperationCompleted);
            }
            this.InvokeAsync("startLogger", new object[] {
                        stationID}, this.startLoggerOperationCompleted, userState);
        }
        
        private void OnstartLoggerOperationCompleted(object arg) {
            if ((this.startLoggerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.startLoggerCompleted(this, new startLoggerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/stopLogger", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool stopLogger(int stationID) {
            object[] results = this.Invoke("stopLogger", new object[] {
                        stationID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void stopLoggerAsync(int stationID) {
            this.stopLoggerAsync(stationID, null);
        }
        
        /// <remarks/>
        public void stopLoggerAsync(int stationID, object userState) {
            if ((this.stopLoggerOperationCompleted == null)) {
                this.stopLoggerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstopLoggerOperationCompleted);
            }
            this.InvokeAsync("stopLogger", new object[] {
                        stationID}, this.stopLoggerOperationCompleted, userState);
        }
        
        private void OnstopLoggerOperationCompleted(object arg) {
            if ((this.stopLoggerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.stopLoggerCompleted(this, new stopLoggerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class KLogger {
        
        private long stationIDField;
        
        private string stationField;
        
        private string deviceNameField;
        
        private string lineNameField;
        
        private BitRate bitRateField;
        
        private SampleRate sampleRateField;
        
        private uint volumeField;
        
        private int recycleIntervalField;
        
        private string workingDirectoryField;
        
        private bool enabledField;
        
        private bool isRecordingField;
        
        /// <remarks/>
        public long stationID {
            get {
                return this.stationIDField;
            }
            set {
                this.stationIDField = value;
            }
        }
        
        /// <remarks/>
        public string station {
            get {
                return this.stationField;
            }
            set {
                this.stationField = value;
            }
        }
        
        /// <remarks/>
        public string deviceName {
            get {
                return this.deviceNameField;
            }
            set {
                this.deviceNameField = value;
            }
        }
        
        /// <remarks/>
        public string lineName {
            get {
                return this.lineNameField;
            }
            set {
                this.lineNameField = value;
            }
        }
        
        /// <remarks/>
        public BitRate bitRate {
            get {
                return this.bitRateField;
            }
            set {
                this.bitRateField = value;
            }
        }
        
        /// <remarks/>
        public SampleRate sampleRate {
            get {
                return this.sampleRateField;
            }
            set {
                this.sampleRateField = value;
            }
        }
        
        /// <remarks/>
        public uint volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        public int recycleInterval {
            get {
                return this.recycleIntervalField;
            }
            set {
                this.recycleIntervalField = value;
            }
        }
        
        /// <remarks/>
        public string workingDirectory {
            get {
                return this.workingDirectoryField;
            }
            set {
                this.workingDirectoryField = value;
            }
        }
        
        /// <remarks/>
        public bool enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public bool isRecording {
            get {
                return this.isRecordingField;
            }
            set {
                this.isRecordingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum BitRate {
        
        /// <remarks/>
        br320,
        
        /// <remarks/>
        br256,
        
        /// <remarks/>
        br128,
        
        /// <remarks/>
        br64,
        
        /// <remarks/>
        br32,
        
        /// <remarks/>
        br24,
        
        /// <remarks/>
        br16,
        
        /// <remarks/>
        br8,
        
        /// <remarks/>
        br_default,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum SampleRate {
        
        /// <remarks/>
        sr_default,
        
        /// <remarks/>
        sr8000,
        
        /// <remarks/>
        sr11025,
        
        /// <remarks/>
        sr22050,
        
        /// <remarks/>
        sr44100,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getDevicesCompletedEventHandler(object sender, getDevicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDevicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDevicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getLinesCompletedEventHandler(object sender, getLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void newConfigCompletedEventHandler(object sender, newConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getConfigCompletedEventHandler(object sender, getConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public KLogger[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KLogger[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void setConfigCompletedEventHandler(object sender, setConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void startLoggerCompletedEventHandler(object sender, startLoggerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class startLoggerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal startLoggerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void stopLoggerCompletedEventHandler(object sender, stopLoggerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class stopLoggerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal stopLoggerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591